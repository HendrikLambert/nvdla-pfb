# automatically generated by the FlatBuffers compiler, do not modify

# namespace: loadable

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AddressListEntry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AddressListEntry()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAddressListEntry(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AddressListEntry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AddressListEntry
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # AddressListEntry
    def MemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # AddressListEntry
    def Offset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # AddressListEntry
    def Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def AddressListEntryStart(builder):
    builder.StartObject(4)

def Start(builder):
    AddressListEntryStart(builder)

def AddressListEntryAddId(builder, id):
    builder.PrependUint16Slot(0, id, 0)

def AddId(builder, id):
    AddressListEntryAddId(builder, id)

def AddressListEntryAddMemId(builder, memId):
    builder.PrependUint16Slot(1, memId, 0)

def AddMemId(builder, memId):
    AddressListEntryAddMemId(builder, memId)

def AddressListEntryAddOffset(builder, offset):
    builder.PrependUint64Slot(2, offset, 0)

def AddOffset(builder, offset):
    AddressListEntryAddOffset(builder, offset)

def AddressListEntryAddSize(builder, size):
    builder.PrependUint64Slot(3, size, 0)

def AddSize(builder, size):
    AddressListEntryAddSize(builder, size)

def AddressListEntryEnd(builder):
    return builder.EndObject()

def End(builder):
    return AddressListEntryEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: loadable

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RelocListEntry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RelocListEntry()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRelocListEntry(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RelocListEntry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RelocListEntry
    def AddressId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # RelocListEntry
    def WriteId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # RelocListEntry
    def Offset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # RelocListEntry
    def Interface(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RelocListEntry
    def SubInterface(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RelocListEntry
    def RelocType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def RelocListEntryStart(builder):
    builder.StartObject(6)

def Start(builder):
    RelocListEntryStart(builder)

def RelocListEntryAddAddressId(builder, addressId):
    builder.PrependUint16Slot(0, addressId, 0)

def AddAddressId(builder, addressId):
    RelocListEntryAddAddressId(builder, addressId)

def RelocListEntryAddWriteId(builder, writeId):
    builder.PrependUint16Slot(1, writeId, 0)

def AddWriteId(builder, writeId):
    RelocListEntryAddWriteId(builder, writeId)

def RelocListEntryAddOffset(builder, offset):
    builder.PrependUint64Slot(2, offset, 0)

def AddOffset(builder, offset):
    RelocListEntryAddOffset(builder, offset)

def RelocListEntryAddInterface(builder, interface):
    builder.PrependUint32Slot(3, interface, 0)

def AddInterface(builder, interface):
    RelocListEntryAddInterface(builder, interface)

def RelocListEntryAddSubInterface(builder, subInterface):
    builder.PrependUint32Slot(4, subInterface, 0)

def AddSubInterface(builder, subInterface):
    RelocListEntryAddSubInterface(builder, subInterface)

def RelocListEntryAddRelocType(builder, relocType):
    builder.PrependUint8Slot(5, relocType, 0)

def AddRelocType(builder, relocType):
    RelocListEntryAddRelocType(builder, relocType)

def RelocListEntryEnd(builder):
    return builder.EndObject()

def End(builder):
    return RelocListEntryEnd(builder)
